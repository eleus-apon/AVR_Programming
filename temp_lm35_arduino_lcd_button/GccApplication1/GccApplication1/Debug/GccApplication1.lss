
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000002c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000080  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000080  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000000ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000340  00000000  00000000  0000010c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002ea  00000000  00000000  0000044c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000171  00000000  00000000  00000736  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000008a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000026f  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000b3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	02 d0       	rcall	.+4      	; 0x22 <main>
  1e:	04 c0       	rjmp	.+8      	; 0x28 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <main>:

#define LED_PORT PB3

int main(void) {

	DDRB |= (1 << LED_PORT);
  22:	bb 9a       	sbi	0x17, 3	; 23

	while (1) {
		
		if (PCINT0==0){
		PORTB |= (1 << LED_PORT);	
  24:	c3 9a       	sbi	0x18, 3	; 24
  26:	fe cf       	rjmp	.-4      	; 0x24 <main+0x2>

00000028 <_exit>:
  28:	f8 94       	cli

0000002a <__stop_program>:
  2a:	ff cf       	rjmp	.-2      	; 0x2a <__stop_program>
