
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  0000047a  000004ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000047a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000050e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000540  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000580  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000098e  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fc  00000000  00000000  00000f56  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000039a  00000000  00000000  00001752  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  00001aec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000453  00000000  00000000  00001b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000196  00000000  00000000  00001fcf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00002165  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e7       	ldi	r30, 0x7A	; 122
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e2       	ldi	r26, 0x20	; 32
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 99 00 	call	0x132	; 0x132 <main>
  9e:	0c 94 3b 02 	jmp	0x476	; 0x476 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
	
	return 0;
}

void adc_init(void){
	ADCSRA = ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)); 
  a6:	ea e7       	ldi	r30, 0x7A	; 122
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	87 e0       	ldi	r24, 0x07	; 7
  ac:	80 83       	st	Z, r24
	ADMUX = (1<<REFS0);         
  ae:	80 e4       	ldi	r24, 0x40	; 64
  b0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA |= (1<<ADEN);       
  b4:	80 81       	ld	r24, Z
  b6:	80 68       	ori	r24, 0x80	; 128
  b8:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);              
  ba:	80 81       	ld	r24, Z
  bc:	80 64       	ori	r24, 0x40	; 64
  be:	80 83       	st	Z, r24
  c0:	08 95       	ret

000000c2 <read_adc>:
}

uint16_t read_adc(uint8_t channel){
	ADMUX &= 0xF0;                
  c2:	ec e7       	ldi	r30, 0x7C	; 124
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	90 81       	ld	r25, Z
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	90 83       	st	Z, r25
	ADMUX |= channel;              
  cc:	90 81       	ld	r25, Z
  ce:	89 2b       	or	r24, r25
  d0:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);              
  d2:	ea e7       	ldi	r30, 0x7A	; 122
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	80 64       	ori	r24, 0x40	; 64
  da:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC));           
  dc:	80 81       	ld	r24, Z
  de:	86 fd       	sbrc	r24, 6
  e0:	fd cf       	rjmp	.-6      	; 0xdc <read_adc+0x1a>
	return ADC;                 
  e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  e6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
  ea:	08 95       	ret

000000ec <USART_init>:

void USART_init(void){
	
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
  ec:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
  f0:	83 e3       	ldi	r24, 0x33	; 51
  f2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (3<<UCSZ00);
  fc:	86 e0       	ldi	r24, 0x06	; 6
  fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 102:	08 95       	ret

00000104 <USART_send>:
}

void USART_send( unsigned char data){
	
	while(!(UCSR0A & (1<<UDRE0)));
 104:	e0 ec       	ldi	r30, 0xC0	; 192
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	90 81       	ld	r25, Z
 10a:	95 ff       	sbrs	r25, 5
 10c:	fd cf       	rjmp	.-6      	; 0x108 <USART_send+0x4>
	UDR0 = data;
 10e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 112:	08 95       	ret

00000114 <USART_putstring>:
		
}

void USART_putstring(char* StringPtr){
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	ec 01       	movw	r28, r24
	
	while(*StringPtr != 0x00){
 11a:	88 81       	ld	r24, Y
 11c:	88 23       	and	r24, r24
 11e:	31 f0       	breq	.+12     	; 0x12c <USART_putstring+0x18>
 120:	21 96       	adiw	r28, 0x01	; 1
		
		USART_send(*StringPtr);
 122:	0e 94 82 00 	call	0x104	; 0x104 <USART_send>
		
}

void USART_putstring(char* StringPtr){
	
	while(*StringPtr != 0x00){
 126:	89 91       	ld	r24, Y+
 128:	81 11       	cpse	r24, r1
 12a:	fb cf       	rjmp	.-10     	; 0x122 <USART_putstring+0xe>
		
		USART_send(*StringPtr);
		StringPtr++;
	}
	
}
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	08 95       	ret

00000132 <main>:
uint16_t read_adc(uint8_t channel);    
void USART_init(void);          
void USART_send( unsigned char data);   
void USART_putstring(char* StringPtr);  

int main(void){
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	00 d0       	rcall	.+0      	; 0x138 <main+0x6>
 138:	00 d0       	rcall	.+0      	; 0x13a <main+0x8>
 13a:	1f 92       	push	r1
 13c:	cd b7       	in	r28, 0x3d	; 61
 13e:	de b7       	in	r29, 0x3e	; 62
	adc_init();     
 140:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	USART_init();     
 144:	0e 94 76 00 	call	0xec	; 0xec <USART_init>
	DDRC = 0xff;
 148:	8f ef       	ldi	r24, 0xFF	; 255
 14a:	87 b9       	out	0x07, r24	; 7
	DDRB = 0xff;
 14c:	84 b9       	out	0x04, r24	; 4
	
	while(1){
		uint16_t x= read_adc(0);
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	0e 94 61 00 	call	0xc2	; 0xc2 <read_adc>
		uint16_t result = x/2.0533; //as refernece voltage 5V=5000
 154:	bc 01       	movw	r22, r24
 156:	80 e0       	ldi	r24, 0x00	; 0
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	0e 94 83 01 	call	0x306	; 0x306 <__floatunsisf>
 15e:	24 e4       	ldi	r18, 0x44	; 68
 160:	39 e6       	ldi	r19, 0x69	; 105
 162:	43 e0       	ldi	r20, 0x03	; 3
 164:	50 e4       	ldi	r21, 0x40	; 64
 166:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <__divsf3>
 16a:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__fixunssfsi>
 16e:	dc 01       	movw	r26, r24
 170:	cb 01       	movw	r24, r22
 172:	8c 01       	movw	r16, r24
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__utoa_ncheck (unsigned int, char *, unsigned char);
	return __utoa_ncheck (__val, __s, __radix);
 174:	4a e0       	ldi	r20, 0x0A	; 10
 176:	be 01       	movw	r22, r28
 178:	6f 5f       	subi	r22, 0xFF	; 255
 17a:	7f 4f       	sbci	r23, 0xFF	; 255
 17c:	0e 94 11 02 	call	0x422	; 0x422 <__utoa_ncheck>
		
		char buffer[5];
		utoa(result,buffer,10);
		USART_putstring("Temperature[^C] :");
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	0e 94 8a 00 	call	0x114	; 0x114 <USART_putstring>
		USART_putstring(buffer);
 188:	ce 01       	movw	r24, r28
 18a:	01 96       	adiw	r24, 0x01	; 1
 18c:	0e 94 8a 00 	call	0x114	; 0x114 <USART_putstring>
		USART_send(13);
 190:	8d e0       	ldi	r24, 0x0D	; 13
 192:	0e 94 82 00 	call	0x104	; 0x104 <USART_send>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	2f ef       	ldi	r18, 0xFF	; 255
 198:	81 ee       	ldi	r24, 0xE1	; 225
 19a:	94 e0       	ldi	r25, 0x04	; 4
 19c:	21 50       	subi	r18, 0x01	; 1
 19e:	80 40       	sbci	r24, 0x00	; 0
 1a0:	90 40       	sbci	r25, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <main+0x6a>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <main+0x74>
 1a6:	00 00       	nop
		_delay_ms(100);
		
		if(result>50)
 1a8:	03 33       	cpi	r16, 0x33	; 51
 1aa:	11 05       	cpc	r17, r1
 1ac:	38 f0       	brcs	.+14     	; 0x1bc <main+0x8a>
		{
			USART_putstring("Alert! High ");
 1ae:	82 e1       	ldi	r24, 0x12	; 18
 1b0:	91 e0       	ldi	r25, 0x01	; 1
 1b2:	0e 94 8a 00 	call	0x114	; 0x114 <USART_putstring>
			PORTB|=(1<<PORTB0);
 1b6:	28 9a       	sbi	0x05, 0	; 5
			PORTB|=(1<<PORTB1);
 1b8:	29 9a       	sbi	0x05, 1	; 5
 1ba:	c9 cf       	rjmp	.-110    	; 0x14e <main+0x1c>
			//PORTB|=(1<<PORTB2);	
		}
		
		else 		
		{
			PORTB&=~(1<<PORTB0);
 1bc:	28 98       	cbi	0x05, 0	; 5
			PORTB&=~(1<<PORTB1);
 1be:	29 98       	cbi	0x05, 1	; 5
			PORTB&=~(1<<PORTB2);		
 1c0:	2a 98       	cbi	0x05, 2	; 5
		}
		
	}
 1c2:	c5 cf       	rjmp	.-118    	; 0x14e <main+0x1c>

000001c4 <__divsf3>:
 1c4:	0e 94 f6 00 	call	0x1ec	; 0x1ec <__divsf3x>
 1c8:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_round>
 1cc:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__fp_pscB>
 1d0:	58 f0       	brcs	.+22     	; 0x1e8 <__divsf3+0x24>
 1d2:	0e 94 c9 01 	call	0x392	; 0x392 <__fp_pscA>
 1d6:	40 f0       	brcs	.+16     	; 0x1e8 <__divsf3+0x24>
 1d8:	29 f4       	brne	.+10     	; 0x1e4 <__divsf3+0x20>
 1da:	5f 3f       	cpi	r21, 0xFF	; 255
 1dc:	29 f0       	breq	.+10     	; 0x1e8 <__divsf3+0x24>
 1de:	0c 94 c0 01 	jmp	0x380	; 0x380 <__fp_inf>
 1e2:	51 11       	cpse	r21, r1
 1e4:	0c 94 0b 02 	jmp	0x416	; 0x416 <__fp_szero>
 1e8:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__fp_nan>

000001ec <__divsf3x>:
 1ec:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__fp_split3>
 1f0:	68 f3       	brcs	.-38     	; 0x1cc <__divsf3+0x8>

000001f2 <__divsf3_pse>:
 1f2:	99 23       	and	r25, r25
 1f4:	b1 f3       	breq	.-20     	; 0x1e2 <__divsf3+0x1e>
 1f6:	55 23       	and	r21, r21
 1f8:	91 f3       	breq	.-28     	; 0x1de <__divsf3+0x1a>
 1fa:	95 1b       	sub	r25, r21
 1fc:	55 0b       	sbc	r21, r21
 1fe:	bb 27       	eor	r27, r27
 200:	aa 27       	eor	r26, r26
 202:	62 17       	cp	r22, r18
 204:	73 07       	cpc	r23, r19
 206:	84 07       	cpc	r24, r20
 208:	38 f0       	brcs	.+14     	; 0x218 <__divsf3_pse+0x26>
 20a:	9f 5f       	subi	r25, 0xFF	; 255
 20c:	5f 4f       	sbci	r21, 0xFF	; 255
 20e:	22 0f       	add	r18, r18
 210:	33 1f       	adc	r19, r19
 212:	44 1f       	adc	r20, r20
 214:	aa 1f       	adc	r26, r26
 216:	a9 f3       	breq	.-22     	; 0x202 <__divsf3_pse+0x10>
 218:	35 d0       	rcall	.+106    	; 0x284 <__divsf3_pse+0x92>
 21a:	0e 2e       	mov	r0, r30
 21c:	3a f0       	brmi	.+14     	; 0x22c <__divsf3_pse+0x3a>
 21e:	e0 e8       	ldi	r30, 0x80	; 128
 220:	32 d0       	rcall	.+100    	; 0x286 <__divsf3_pse+0x94>
 222:	91 50       	subi	r25, 0x01	; 1
 224:	50 40       	sbci	r21, 0x00	; 0
 226:	e6 95       	lsr	r30
 228:	00 1c       	adc	r0, r0
 22a:	ca f7       	brpl	.-14     	; 0x21e <__divsf3_pse+0x2c>
 22c:	2b d0       	rcall	.+86     	; 0x284 <__divsf3_pse+0x92>
 22e:	fe 2f       	mov	r31, r30
 230:	29 d0       	rcall	.+82     	; 0x284 <__divsf3_pse+0x92>
 232:	66 0f       	add	r22, r22
 234:	77 1f       	adc	r23, r23
 236:	88 1f       	adc	r24, r24
 238:	bb 1f       	adc	r27, r27
 23a:	26 17       	cp	r18, r22
 23c:	37 07       	cpc	r19, r23
 23e:	48 07       	cpc	r20, r24
 240:	ab 07       	cpc	r26, r27
 242:	b0 e8       	ldi	r27, 0x80	; 128
 244:	09 f0       	breq	.+2      	; 0x248 <__divsf3_pse+0x56>
 246:	bb 0b       	sbc	r27, r27
 248:	80 2d       	mov	r24, r0
 24a:	bf 01       	movw	r22, r30
 24c:	ff 27       	eor	r31, r31
 24e:	93 58       	subi	r25, 0x83	; 131
 250:	5f 4f       	sbci	r21, 0xFF	; 255
 252:	3a f0       	brmi	.+14     	; 0x262 <__divsf3_pse+0x70>
 254:	9e 3f       	cpi	r25, 0xFE	; 254
 256:	51 05       	cpc	r21, r1
 258:	78 f0       	brcs	.+30     	; 0x278 <__divsf3_pse+0x86>
 25a:	0c 94 c0 01 	jmp	0x380	; 0x380 <__fp_inf>
 25e:	0c 94 0b 02 	jmp	0x416	; 0x416 <__fp_szero>
 262:	5f 3f       	cpi	r21, 0xFF	; 255
 264:	e4 f3       	brlt	.-8      	; 0x25e <__divsf3_pse+0x6c>
 266:	98 3e       	cpi	r25, 0xE8	; 232
 268:	d4 f3       	brlt	.-12     	; 0x25e <__divsf3_pse+0x6c>
 26a:	86 95       	lsr	r24
 26c:	77 95       	ror	r23
 26e:	67 95       	ror	r22
 270:	b7 95       	ror	r27
 272:	f7 95       	ror	r31
 274:	9f 5f       	subi	r25, 0xFF	; 255
 276:	c9 f7       	brne	.-14     	; 0x26a <__divsf3_pse+0x78>
 278:	88 0f       	add	r24, r24
 27a:	91 1d       	adc	r25, r1
 27c:	96 95       	lsr	r25
 27e:	87 95       	ror	r24
 280:	97 f9       	bld	r25, 7
 282:	08 95       	ret
 284:	e1 e0       	ldi	r30, 0x01	; 1
 286:	66 0f       	add	r22, r22
 288:	77 1f       	adc	r23, r23
 28a:	88 1f       	adc	r24, r24
 28c:	bb 1f       	adc	r27, r27
 28e:	62 17       	cp	r22, r18
 290:	73 07       	cpc	r23, r19
 292:	84 07       	cpc	r24, r20
 294:	ba 07       	cpc	r27, r26
 296:	20 f0       	brcs	.+8      	; 0x2a0 <__divsf3_pse+0xae>
 298:	62 1b       	sub	r22, r18
 29a:	73 0b       	sbc	r23, r19
 29c:	84 0b       	sbc	r24, r20
 29e:	ba 0b       	sbc	r27, r26
 2a0:	ee 1f       	adc	r30, r30
 2a2:	88 f7       	brcc	.-30     	; 0x286 <__divsf3_pse+0x94>
 2a4:	e0 95       	com	r30
 2a6:	08 95       	ret

000002a8 <__fixunssfsi>:
 2a8:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__fp_splitA>
 2ac:	88 f0       	brcs	.+34     	; 0x2d0 <__fixunssfsi+0x28>
 2ae:	9f 57       	subi	r25, 0x7F	; 127
 2b0:	98 f0       	brcs	.+38     	; 0x2d8 <__fixunssfsi+0x30>
 2b2:	b9 2f       	mov	r27, r25
 2b4:	99 27       	eor	r25, r25
 2b6:	b7 51       	subi	r27, 0x17	; 23
 2b8:	b0 f0       	brcs	.+44     	; 0x2e6 <__fixunssfsi+0x3e>
 2ba:	e1 f0       	breq	.+56     	; 0x2f4 <__fixunssfsi+0x4c>
 2bc:	66 0f       	add	r22, r22
 2be:	77 1f       	adc	r23, r23
 2c0:	88 1f       	adc	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	1a f0       	brmi	.+6      	; 0x2cc <__fixunssfsi+0x24>
 2c6:	ba 95       	dec	r27
 2c8:	c9 f7       	brne	.-14     	; 0x2bc <__fixunssfsi+0x14>
 2ca:	14 c0       	rjmp	.+40     	; 0x2f4 <__fixunssfsi+0x4c>
 2cc:	b1 30       	cpi	r27, 0x01	; 1
 2ce:	91 f0       	breq	.+36     	; 0x2f4 <__fixunssfsi+0x4c>
 2d0:	0e 94 0a 02 	call	0x414	; 0x414 <__fp_zero>
 2d4:	b1 e0       	ldi	r27, 0x01	; 1
 2d6:	08 95       	ret
 2d8:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_zero>
 2dc:	67 2f       	mov	r22, r23
 2de:	78 2f       	mov	r23, r24
 2e0:	88 27       	eor	r24, r24
 2e2:	b8 5f       	subi	r27, 0xF8	; 248
 2e4:	39 f0       	breq	.+14     	; 0x2f4 <__fixunssfsi+0x4c>
 2e6:	b9 3f       	cpi	r27, 0xF9	; 249
 2e8:	cc f3       	brlt	.-14     	; 0x2dc <__fixunssfsi+0x34>
 2ea:	86 95       	lsr	r24
 2ec:	77 95       	ror	r23
 2ee:	67 95       	ror	r22
 2f0:	b3 95       	inc	r27
 2f2:	d9 f7       	brne	.-10     	; 0x2ea <__fixunssfsi+0x42>
 2f4:	3e f4       	brtc	.+14     	; 0x304 <__fixunssfsi+0x5c>
 2f6:	90 95       	com	r25
 2f8:	80 95       	com	r24
 2fa:	70 95       	com	r23
 2fc:	61 95       	neg	r22
 2fe:	7f 4f       	sbci	r23, 0xFF	; 255
 300:	8f 4f       	sbci	r24, 0xFF	; 255
 302:	9f 4f       	sbci	r25, 0xFF	; 255
 304:	08 95       	ret

00000306 <__floatunsisf>:
 306:	e8 94       	clt
 308:	09 c0       	rjmp	.+18     	; 0x31c <__floatsisf+0x12>

0000030a <__floatsisf>:
 30a:	97 fb       	bst	r25, 7
 30c:	3e f4       	brtc	.+14     	; 0x31c <__floatsisf+0x12>
 30e:	90 95       	com	r25
 310:	80 95       	com	r24
 312:	70 95       	com	r23
 314:	61 95       	neg	r22
 316:	7f 4f       	sbci	r23, 0xFF	; 255
 318:	8f 4f       	sbci	r24, 0xFF	; 255
 31a:	9f 4f       	sbci	r25, 0xFF	; 255
 31c:	99 23       	and	r25, r25
 31e:	a9 f0       	breq	.+42     	; 0x34a <__floatsisf+0x40>
 320:	f9 2f       	mov	r31, r25
 322:	96 e9       	ldi	r25, 0x96	; 150
 324:	bb 27       	eor	r27, r27
 326:	93 95       	inc	r25
 328:	f6 95       	lsr	r31
 32a:	87 95       	ror	r24
 32c:	77 95       	ror	r23
 32e:	67 95       	ror	r22
 330:	b7 95       	ror	r27
 332:	f1 11       	cpse	r31, r1
 334:	f8 cf       	rjmp	.-16     	; 0x326 <__floatsisf+0x1c>
 336:	fa f4       	brpl	.+62     	; 0x376 <__floatsisf+0x6c>
 338:	bb 0f       	add	r27, r27
 33a:	11 f4       	brne	.+4      	; 0x340 <__floatsisf+0x36>
 33c:	60 ff       	sbrs	r22, 0
 33e:	1b c0       	rjmp	.+54     	; 0x376 <__floatsisf+0x6c>
 340:	6f 5f       	subi	r22, 0xFF	; 255
 342:	7f 4f       	sbci	r23, 0xFF	; 255
 344:	8f 4f       	sbci	r24, 0xFF	; 255
 346:	9f 4f       	sbci	r25, 0xFF	; 255
 348:	16 c0       	rjmp	.+44     	; 0x376 <__floatsisf+0x6c>
 34a:	88 23       	and	r24, r24
 34c:	11 f0       	breq	.+4      	; 0x352 <__floatsisf+0x48>
 34e:	96 e9       	ldi	r25, 0x96	; 150
 350:	11 c0       	rjmp	.+34     	; 0x374 <__floatsisf+0x6a>
 352:	77 23       	and	r23, r23
 354:	21 f0       	breq	.+8      	; 0x35e <__floatsisf+0x54>
 356:	9e e8       	ldi	r25, 0x8E	; 142
 358:	87 2f       	mov	r24, r23
 35a:	76 2f       	mov	r23, r22
 35c:	05 c0       	rjmp	.+10     	; 0x368 <__floatsisf+0x5e>
 35e:	66 23       	and	r22, r22
 360:	71 f0       	breq	.+28     	; 0x37e <__floatsisf+0x74>
 362:	96 e8       	ldi	r25, 0x86	; 134
 364:	86 2f       	mov	r24, r22
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	60 e0       	ldi	r22, 0x00	; 0
 36a:	2a f0       	brmi	.+10     	; 0x376 <__floatsisf+0x6c>
 36c:	9a 95       	dec	r25
 36e:	66 0f       	add	r22, r22
 370:	77 1f       	adc	r23, r23
 372:	88 1f       	adc	r24, r24
 374:	da f7       	brpl	.-10     	; 0x36c <__floatsisf+0x62>
 376:	88 0f       	add	r24, r24
 378:	96 95       	lsr	r25
 37a:	87 95       	ror	r24
 37c:	97 f9       	bld	r25, 7
 37e:	08 95       	ret

00000380 <__fp_inf>:
 380:	97 f9       	bld	r25, 7
 382:	9f 67       	ori	r25, 0x7F	; 127
 384:	80 e8       	ldi	r24, 0x80	; 128
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	60 e0       	ldi	r22, 0x00	; 0
 38a:	08 95       	ret

0000038c <__fp_nan>:
 38c:	9f ef       	ldi	r25, 0xFF	; 255
 38e:	80 ec       	ldi	r24, 0xC0	; 192
 390:	08 95       	ret

00000392 <__fp_pscA>:
 392:	00 24       	eor	r0, r0
 394:	0a 94       	dec	r0
 396:	16 16       	cp	r1, r22
 398:	17 06       	cpc	r1, r23
 39a:	18 06       	cpc	r1, r24
 39c:	09 06       	cpc	r0, r25
 39e:	08 95       	ret

000003a0 <__fp_pscB>:
 3a0:	00 24       	eor	r0, r0
 3a2:	0a 94       	dec	r0
 3a4:	12 16       	cp	r1, r18
 3a6:	13 06       	cpc	r1, r19
 3a8:	14 06       	cpc	r1, r20
 3aa:	05 06       	cpc	r0, r21
 3ac:	08 95       	ret

000003ae <__fp_round>:
 3ae:	09 2e       	mov	r0, r25
 3b0:	03 94       	inc	r0
 3b2:	00 0c       	add	r0, r0
 3b4:	11 f4       	brne	.+4      	; 0x3ba <__fp_round+0xc>
 3b6:	88 23       	and	r24, r24
 3b8:	52 f0       	brmi	.+20     	; 0x3ce <__fp_round+0x20>
 3ba:	bb 0f       	add	r27, r27
 3bc:	40 f4       	brcc	.+16     	; 0x3ce <__fp_round+0x20>
 3be:	bf 2b       	or	r27, r31
 3c0:	11 f4       	brne	.+4      	; 0x3c6 <__fp_round+0x18>
 3c2:	60 ff       	sbrs	r22, 0
 3c4:	04 c0       	rjmp	.+8      	; 0x3ce <__fp_round+0x20>
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	08 95       	ret

000003d0 <__fp_split3>:
 3d0:	57 fd       	sbrc	r21, 7
 3d2:	90 58       	subi	r25, 0x80	; 128
 3d4:	44 0f       	add	r20, r20
 3d6:	55 1f       	adc	r21, r21
 3d8:	59 f0       	breq	.+22     	; 0x3f0 <__fp_splitA+0x10>
 3da:	5f 3f       	cpi	r21, 0xFF	; 255
 3dc:	71 f0       	breq	.+28     	; 0x3fa <__fp_splitA+0x1a>
 3de:	47 95       	ror	r20

000003e0 <__fp_splitA>:
 3e0:	88 0f       	add	r24, r24
 3e2:	97 fb       	bst	r25, 7
 3e4:	99 1f       	adc	r25, r25
 3e6:	61 f0       	breq	.+24     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e8:	9f 3f       	cpi	r25, 0xFF	; 255
 3ea:	79 f0       	breq	.+30     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ec:	87 95       	ror	r24
 3ee:	08 95       	ret
 3f0:	12 16       	cp	r1, r18
 3f2:	13 06       	cpc	r1, r19
 3f4:	14 06       	cpc	r1, r20
 3f6:	55 1f       	adc	r21, r21
 3f8:	f2 cf       	rjmp	.-28     	; 0x3de <__fp_split3+0xe>
 3fa:	46 95       	lsr	r20
 3fc:	f1 df       	rcall	.-30     	; 0x3e0 <__fp_splitA>
 3fe:	08 c0       	rjmp	.+16     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 400:	16 16       	cp	r1, r22
 402:	17 06       	cpc	r1, r23
 404:	18 06       	cpc	r1, r24
 406:	99 1f       	adc	r25, r25
 408:	f1 cf       	rjmp	.-30     	; 0x3ec <__fp_splitA+0xc>
 40a:	86 95       	lsr	r24
 40c:	71 05       	cpc	r23, r1
 40e:	61 05       	cpc	r22, r1
 410:	08 94       	sec
 412:	08 95       	ret

00000414 <__fp_zero>:
 414:	e8 94       	clt

00000416 <__fp_szero>:
 416:	bb 27       	eor	r27, r27
 418:	66 27       	eor	r22, r22
 41a:	77 27       	eor	r23, r23
 41c:	cb 01       	movw	r24, r22
 41e:	97 f9       	bld	r25, 7
 420:	08 95       	ret

00000422 <__utoa_ncheck>:
 422:	bb 27       	eor	r27, r27

00000424 <__utoa_common>:
 424:	fb 01       	movw	r30, r22
 426:	55 27       	eor	r21, r21
 428:	aa 27       	eor	r26, r26
 42a:	88 0f       	add	r24, r24
 42c:	99 1f       	adc	r25, r25
 42e:	aa 1f       	adc	r26, r26
 430:	a4 17       	cp	r26, r20
 432:	10 f0       	brcs	.+4      	; 0x438 <__utoa_common+0x14>
 434:	a4 1b       	sub	r26, r20
 436:	83 95       	inc	r24
 438:	50 51       	subi	r21, 0x10	; 16
 43a:	b9 f7       	brne	.-18     	; 0x42a <__utoa_common+0x6>
 43c:	a0 5d       	subi	r26, 0xD0	; 208
 43e:	aa 33       	cpi	r26, 0x3A	; 58
 440:	08 f0       	brcs	.+2      	; 0x444 <__utoa_common+0x20>
 442:	a9 5d       	subi	r26, 0xD9	; 217
 444:	a1 93       	st	Z+, r26
 446:	00 97       	sbiw	r24, 0x00	; 0
 448:	79 f7       	brne	.-34     	; 0x428 <__utoa_common+0x4>
 44a:	b1 11       	cpse	r27, r1
 44c:	b1 93       	st	Z+, r27
 44e:	11 92       	st	Z+, r1
 450:	cb 01       	movw	r24, r22
 452:	0c 94 2b 02 	jmp	0x456	; 0x456 <strrev>

00000456 <strrev>:
 456:	dc 01       	movw	r26, r24
 458:	fc 01       	movw	r30, r24
 45a:	67 2f       	mov	r22, r23
 45c:	71 91       	ld	r23, Z+
 45e:	77 23       	and	r23, r23
 460:	e1 f7       	brne	.-8      	; 0x45a <strrev+0x4>
 462:	32 97       	sbiw	r30, 0x02	; 2
 464:	04 c0       	rjmp	.+8      	; 0x46e <strrev+0x18>
 466:	7c 91       	ld	r23, X
 468:	6d 93       	st	X+, r22
 46a:	70 83       	st	Z, r23
 46c:	62 91       	ld	r22, -Z
 46e:	ae 17       	cp	r26, r30
 470:	bf 07       	cpc	r27, r31
 472:	c8 f3       	brcs	.-14     	; 0x466 <strrev+0x10>
 474:	08 95       	ret

00000476 <_exit>:
 476:	f8 94       	cli

00000478 <__stop_program>:
 478:	ff cf       	rjmp	.-2      	; 0x478 <__stop_program>
